#%RAML 1.0
title: Infractions Montréal
baseUri: http://127.0.0.1:5000
version: 1

types:
  Utilisateur:
    type: object
    properties:
      prenom: {type: string}
      nom: {type: string}
      courriel: {
        type: string,
        format: email
      }
      mot_de_passe: {
        type: string,
        minLength: 8,
        pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8}$
      }
      etablissements: {
        type: array,
        items: {type: number},
        description: Liste des identifiants des établissements surveillés par l'utilisateur
      }
      photo: {
        type: file,
        required: false,
        fileTypes: ['image/jpeg', 'image/png', 'image/jpg'],
        description: Fichier image au format png, jpg ou jpeg
      }
    required: [prenom, nom, courriel, mot_de_passe, etablissements]
    additionalProperties: false
    example: |
      {
        "prenom": "Jean",
        "nom": "Mathieu",
        "courriel": "jeanmath@gmail.com",
        "mot_de_passe": "pouletGrille69!",
        "etablissements": [1045, 1046, 10470],
        "photo": "photo.png"

types:
  Infraction:
    type: object
    properties:
      id: {type: integer}
      id_poursuite: {type: integer}
      id_businness: {type: integer}
      date: {type: string}
      description: {type: string}
      adresse: {type: string}
      date_jugement: {type: string}
      etablissement: {type: string}
      montant: {type: number}
      proprietaire: {type: string}
      ville: {type: string}
      statut: {type: string}
      date_statut: {type: string}
      categorie: {type: string}
    example: |
    {
      "id": 1,
      "id_poursuite": 1,
      "id_businness": 1,
      "date": "2022-01-01",
      "description": "Infraction XYZ",
      "adresse": "123 Rue ABC",
      "date_jugement": "2022-01-01",
      "etablissement": "Restaurant XYZ",
      "montant": 100,
      "proprietaire": "John Doe",
      "ville": "Montréal",
      "statut": "Ferme",
      "date_statut": "2022-01-01",
      "categorie": "XYZ"

    }

types:
    Plainte:
    type: object
    properties:
      id: {type: integer}
      etablissement: {type: string}
      adresse: {type: string}
      date_visite_client: {type: string, format: date}
      nom_client: {type: string}
      prenom_client: {type: string}
      description_probleme: {type: string}
    additionalProperties: false
    example: |
      {
        "id": 1,
        "etablissement": "Restaurant XYZ",
        "adresse": "123 Rue ABC",
        "date_visite_client": "2022-01-01",
        "nom_client": "Doe",
        "prenom_client": "John",
        "description_probleme": "Problème XYZ"
      }

/api/contraventions:
  get:
    description: Récupère les contraventions pour une période donnée en paramètre
    queryParameters:
      du:
        description: Date de début de la période
        type: date
        required: true
      au:
        description: Date de fin de la période
        type: date
        required: true
    responses:
      200:
        body:
          application/json:
            type: Infraction[]
            example: |
              [
                {
                  "id": 1,
                  "id_poursuite": 1,
                  "id_businness": 1,
                  "date": "2022-01-01",
                  "description": "Infraction XYZ",
                  "adresse": "123 Rue ABC",
                  "date_jugement": "2022-01-01",
                  "etablissement": "Restaurant XYZ",
                  "montant": 100,
                  "proprietaire": "John Doe",
                  "ville": "Montréal",
                  "statut": "Ferme",
                  "date_statut": "2022-01-01",
                  "categorie": "XYZ"
                }
              ]
      400:
        description: Les dates de début et de fin de la période doivent être fournies
        body:
          application/json:
            example: |
              {
                "error": "Les dates de début et de fin de la période doivent être fournies."
              }
      404:
        description: Aucune contravention n'a été trouvée pour la période donnée
        body:
          application/json:
            example: |
              {
                "error": "Aucune contravention n'a été trouvée pour la période donnée."
              }
      500:
        description: Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite."
              }

/api/demande-inspections:
  post:
    description: L'utilisateur envoie une plainte pour un établissement
    body:
      application/json:
        type: Plainte
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "message": "La plainte pour l'établissement a été envoyée avec succès."
              }
      400:
        description: Champ manquant, tous les champs doivent être remplis et respecter les critères
        body:
          application/json:
            example: |
              {
                "error": "Le formulaire n'a pas été rempli correctement, veuillez remplir tous les champs et respecter les critères"
              }
      500:
        description: Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement."
              }

/api/supprimer-inspection/{int:id_inspection}:
  delete:
    description: Supprime une inspection
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "L'inspection a été supprimée avec succès."
              }
      500:
        description: Une erreur interne s'est produite.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement."
              }


/api/supprimer-etablissement/{string:etablissement}:
  delete:
    description: Supprime un établissement
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "L'établissement a été supprimé avec succès."
              }
      500:
        description: Une erreur interne s'est produite.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement."
              }

/api/inscription/traitement:
  post:
    description: L'utilisateur crée un compte
    body:
      application/json:
        type: Utilisateur
    responses:
      201:
        description: Tous les champs ont été remplis correctement. L'utilisateur a été ajouté avec succès.
        body:
          application/json:
            example: |
              {
                "message": "L'utilisateur a été ajouté avec succès."
              }
      200:
        description: L'adresse courriel est déjà utilisée
        body:
          application/json:
            example: |
              {
                "message": "L'adresse courriel "jean.math@gmail.com" est déjà utilisée"
              }
      500:
        description: Une erreur interne s'est produite.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite, l'erreur a été signalée à l'équipe de développement"
              }

/api/profil/modifer/{id}:
  uriParameters:
    id:
      type: integer
      description: L'identifiant de l'utilisateur dans la base de données
  put:
    description: Modifie le profil de l'utilisateur. Uniquement les champs 'photo' et 'etablissements' peuvent être modifiés.
    body:
      [  multipart/form-data | application/x-www-form-urlencoded  ]:
        properties:
          photo:
            description: Fichier image au format png, jpg ou jpeg
            required: false
            type: file
            fileTypes: ['image/jpeg', 'image/png', 'image/jpg']
          etablissements:
            description: Liste des identifiants des établissements surveillés par l'utilisateur
            required: false
            type: array
            items:
              type: number
    responses:
      200:
        description: Les données reçues sont valides et le profil de l'utilisateur a été modifié avec succès.
        body:
          application/json:
            example: |
              {
                "message": "Modifications apportées avec succès"
              }
      500:
        description: Une erreur interne s'est produite.
        body:
          application/json:
            example: |
              {
                "error": "Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement."
              }
      400:
        description: Les données reçues sont invalides ou manquantes.
        body:
          application/json:
            example: |
              {
                "error": "Erreur lors de la lecture du fichier : type de fichier invalide"
              }
        404:
          description: L'utilisateur n'existe pas.
          body:
            application/json:
              example: |
                {
                  "error": "L'utilisateur n'existe pas."
                }

/api/login/traitement:
    post:
        description: L'utilisateur se connecte
        body:
          application/json:
            properties:
              courriel:
                format: email
                type: string
              mot_de_passe:
                type: string
        responses:
            200:
              description: Le mot de passe et courriel sont dans le bon format, donc la requête est valide.
              body:
                application/json:
                  type: string
            400:
              description: Un ou plusieurs champs sont manquants et/ou invalides.
              body:
                application/json:
                  type: string
                  example: |
                    {
                      "error": "Un ou plusieurs champs sont invalides"
                    }
            500:
              description: Une erreur interne s'est produite.
              body:
                application/json:
                  type: string
                  example: |
                    {
                      "error": "Une erreur interne s'est produite. L'erreur a été signalée à l'équipe de développement."
                    }

/api/supprimer-etablissement/{id_utilisateur}&{token}&{etablissement}:
    uriParameters:
      id_utilisateur:
        type: integer
        description: L'identifiant de l'utilisateur
      token:
        type: string
        description: Le jeton d'authentification de l'utilisateur obtenu dans le courriel
      etablissement:
        type: integer
        description: L'identifiant de l'établissement à supprimer
    patch:
        description: Supprime l'établissement de la liste des établissements surveillés par l'utilisateur
        responses:
            200:
              description: L'établissement a été supprimé retiré avec du profil de l'utilisateur avec succès.
              body:
                application/json:
                  type: string
                  example: |
                    {
                      "message": "L'établissement a été supprimé de votre profil"
                    }
            403:
                description: Le jeton d'authentification fourni est invalide ou a expiré.
                body:
                  application/json:
                    type: string
                    example: |
                      {
                        "error": "Le jeton d'authentification fourni est invalide ou a expiré"
                      }

/api/infractions-etablissements/{format}:
    uriParameters:
      format:
        type: string
        description: Le format de la réponse (JSON, XML, CSV)
    get:
        description: |
            Ce service permet d'accéder à une liste de tous les établissements ayant commis au moins une infraction.
            Pour chaque établissement, le nom, l'id ainsi que le nombre d'infractions commise sont affichés.
            La liste est triée en ordre décroissant du nombre d'infractions commises.
            Le format de la réponse peut être JSON ou XML ou CSV.
        responses:
            200:
              description: Les données ont été récupérées et traitées avec succès.
              body:
                application/json:
                  type: array
                  example: |
                    {[{
                      "nom": "SUPER MARCHE TROPIC",
                      "id": 9587,
                      "nombre_infractions": 19
                      },
                      {
                        "nom": "RESTAURANT JADE QUARTIER CHINOIS",
                        "id": 14134,
                        "nombre_infractions": 19
                      },
                      {
                        "nom": "BUFFALO BILL WINGS",
                        "id": 117214,
                        "nombre_infractions": 17
                      }]}
                application/xml:
                  type: array
                  example: |
                    <etablissements>
                      <etablissement>
                        <nom>SUPER MARCHE TROPIC</nom>
                        <id>9587</id>
                        <nombre_infractions>19</nombre_infractions>
                      </etablissement>
                      <etablissement>
                        <nom>RESTAURANT JADE QUARTIER CHINOIS</nom>
                        <id>14134</id>
                        <nombre_infractions>19</nombre_infractions>
                      </etablissement>
                      <etablissement>
                        <nom>BUFFALO BILL WINGS</nom>
                        <id>117214</id>
                        <nombre_infractions>17</nombre_infractions>
                      </etablissement>
                text/csv:
                  example: |
                    nom,id,nombre_infractions
                    SUPER MARCHE TROPIC,9587,19
                    RESTAURANT JADE QUARTIER CHINOIS,14134,19
                    BUFFALO BILL WINGS,117214,17

            400:
                description: Le format demandé n'est pas supporté.
                body:
                  application/json:
                    type: string
                    example: |
                      {
                        "error": "Le format "YAML" n'est pas supporté par ce service."
                      }